{
  "_args": [
    [
      {
        "raw": "slug-legacy@git+ssh://git@github.com/jeromewir/node-slug.git",
        "scope": null,
        "escapedName": "slug-legacy",
        "name": "slug-legacy",
        "rawSpec": "git+ssh://git@github.com/jeromewir/node-slug.git",
        "spec": "git+ssh://git@github.com/jeromewir/node-slug.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:jeromewir/node-slug.git",
          "sshUrl": "git+ssh://git@github.com/jeromewir/node-slug.git",
          "httpsUrl": "git+https://github.com/jeromewir/node-slug.git",
          "gitUrl": "git://github.com/jeromewir/node-slug.git",
          "shortcut": "github:jeromewir/node-slug",
          "directUrl": "https://raw.githubusercontent.com/jeromewir/node-slug/master/package.json"
        }
      },
      "/mnt/disks/data/var/www/tenants.early-birds"
    ]
  ],
  "_from": "git+ssh://git@github.com/jeromewir/node-slug.git",
  "_id": "slug-legacy@0.9.1",
  "_inCache": true,
  "_location": "/slug-legacy",
  "_phantomChildren": {},
  "_requested": {
    "raw": "slug-legacy@git+ssh://git@github.com/jeromewir/node-slug.git",
    "scope": null,
    "escapedName": "slug-legacy",
    "name": "slug-legacy",
    "rawSpec": "git+ssh://git@github.com/jeromewir/node-slug.git",
    "spec": "git+ssh://git@github.com/jeromewir/node-slug.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:jeromewir/node-slug.git",
      "sshUrl": "git+ssh://git@github.com/jeromewir/node-slug.git",
      "httpsUrl": "git+https://github.com/jeromewir/node-slug.git",
      "gitUrl": "git://github.com/jeromewir/node-slug.git",
      "shortcut": "github:jeromewir/node-slug",
      "directUrl": "https://raw.githubusercontent.com/jeromewir/node-slug/master/package.json"
    }
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git+ssh://git@github.com/jeromewir/node-slug.git#2cd436dd79f34176fa7360c00afca98358f5a25a",
  "_shasum": "2cef2d8023f33f93926510e94d3eeddc3184d64e",
  "_shrinkwrap": null,
  "_spec": "slug-legacy@git+ssh://git@github.com/jeromewir/node-slug.git",
  "_where": "/mnt/disks/data/var/www/tenants.early-birds",
  "author": {
    "name": "dodo",
    "url": "https://github.com/dodo"
  },
  "bin": {
    "slug": "bin/slug.js"
  },
  "bugs": {
    "url": "https://github.com/dodo/node-slug/issues"
  },
  "dependencies": {
    "unicode": ">= 0.3.1"
  },
  "description": "slugifies even utf-8 chars!",
  "devDependencies": {
    "coffee-script": "~1.7.1",
    "mocha": "~1.17.1",
    "should": "~3.1.2"
  },
  "engines": {
    "node": ">= 0.4.x"
  },
  "gitHead": "2cd436dd79f34176fa7360c00afca98358f5a25a",
  "homepage": "https://github.com/dodo/node-slug",
  "keywords": [
    "slugify",
    "slug",
    "string",
    "utf8",
    "utf-8",
    "unicode",
    "url"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/dodo/node-slug/raw/master/LICENSE"
    }
  ],
  "main": "slug.js",
  "name": "slug-legacy",
  "optionalDependencies": {},
  "readme": "# [slug](https://github.com/dodo/node-slug)\n\nslugifies every string, even when it contains unicode!\n\nMake strings url-safe.\n\n- respecting [RFC 3986](https://tools.ietf.org/html/rfc3986)\n- Comprehensive tests\n- No dependencies (except the unicode table)\n- Not in coffee-script (except the tests lol)\n- Coerces foreign symbols to their english equivalent\n- Works in browser (window.slug) and AMD/CommonJS-flavoured module loaders (except the unicode symbols unless you use browserify but who wants to download a ~2mb js file, right?)\n\n```\nnpm install slug\n```\n\n```\nbower install slug\n```\n\n## example\n\n```javascript\nvar slug = require('slug')\nvar print = console.log.bind(console, '>')\n\nprint(slug('i ♥ unicode'))\n// > i-love-unicode\n\nprint(slug('unicode ♥ is ☢')) // yes!\n// > unicode-love-is-radioactive\n\nprint(slug('i ♥ unicode', '_')) // If you prefer something else then `-` as seperator\n// > i_love_unicode\n\nslug.charmap['♥'] = 'freaking love' // change default charmap or use option {charmap:{…}} as 2. argument\nprint(slug('I ♥ UNICODE'))\n// > I-freaking-love-UNICODE\n\nprint(slug('☏-Number', {lower: true})) // If you prefer lower case\n// > telephone-number\n\nprint(slug('i <3 unicode'))\n// > i-love-unicode\n```\n\n## options\n\n```javascript\n// options is either object or replacement (sets options.replacement)\nslug('string', [{options} || 'replacement']);\n```\n\n```javascript\nslug.defaults.mode ='pretty';\nslug.defaults.modes['rfc3986'] = {\n    replacement: '-',      // replace spaces with replacement\n    symbols: true,         // replace unicode symbols or not\n    remove: null,          // (optional) regex to remove characters\n    lower: true,           // result in lower case\n    charmap: slug.charmap, // replace special characters\n    multicharmap: slug.multicharmap // replace multi-characters\n};\nslug.defaults.modes['pretty'] = {\n    replacement: '-',\n    symbols: true,\n    remove: /[.]/g,\n    lower: false,\n    charmap: slug.charmap,\n    multicharmap: slug.multicharmap\n};\n```\n\n## browser\n\nWhen using browserify you might want to remove the symbols table from your bundle by using `--ignore` similar to this:\n```bash\n# generates a standalone slug browser bundle:\nbrowserify slug.js --ignore unicode/category/So -s slug > slug-browser.js\n```\n\n[![Build Status](https://secure.travis-ci.org/dodo/node-slug.png)](http://travis-ci.org/dodo/node-slug)\n\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/dodo/node-slug/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/dodo/node-slug.git"
  },
  "scripts": {
    "test": "mocha ./test/*.test.* --require should --reporter spec --colors --compilers coffee:coffee-script/register"
  },
  "version": "0.9.1"
}
